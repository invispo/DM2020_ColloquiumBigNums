Программа предназначена для работы с большими числами, которые не "влазят" в регистры процессора.
Реализованы:
	BigN - Натуральные числа + {0}
	Пример: 25345863428795684392658324658963485632485634263427...
	BigZ - Целые числа
	Пример: -15298563298598275923479857326 или 789634295843875698398543...
	BigQ - Рациональные числа 
	Пример: 2521/-2632, (-2521/2632), -2521/-1, -126587265...
	BigPolinom - Полиномы (многочлены)
	Пример: (35255)*x^6 + 1524634x^4 + (732/-2612)x^5 + (2623/36324)x^3 +
	+ (-52163/2521)x^7 + (-51268235)x^2 + 132152*x^1 + (-1513262/-15612)
	
Список доступных команд:
	"input as" ("in as") - ввод числа 
	Пример: ввод рационального числа "a": a input as BigQ
	
	"output" ("out" или "print") - вывод числа
	Пример: вывод введенного ранее числа "a": a output
	
	"list" ("ls") - просмотр списка введенных и сформированных чисел
	"add" ("+") - сумма 2х чисел
	Пример: сложить числа a и b, результат поместить в с: a add b to c
	
	Анологично работают: 
	Для любого вида чисел:
	"subtract" ("-") - вычитание   
	"multiply" ("*") - умножение 
	"divide" ("/") - деление
	"mod" ("%") - деление по модулю 
	"gcd" - НОД
	Только для натуральных чисел: 
	"lcm" - НОК 
	Примеры: a mod b to c или a gcd c to e
	
	"compareTo"("cmp" или "compare") - сравнение 2х чисел
	Примеры: a compareTo b или c compare d
	
	"isZero" - проверка, является ли число нулем
	Пример: a isZero
	
	"checkPositive"("isPositive") - проверка на положительность
	Пример: b checkPositive
	
	"multiplyBy10x" - умножение натурального числа на 10^x
	Пример: умножение a на 10^15278923, сохранение результата в "c":
	a multiplyBy10x 15278923 to c
	
	"subtructByK" - вычитание из натурального числа другого, умноженного на натуральное число
	Пример: вычисление a - (b*c), сохранение результата в "d": 
	a subtructByK b c to d
	
	"toBigN", "toBigZ", "toBigQ", "toBigPolinom" - перевод числа в "другой вид", если это возможно
	Примеры: a toBigZ to a или b toBigPolinom to Number1
	
	"getDegree" - вычисление максимальной степени полинома
	Пример: a getDegree
	
	"getCoefAtHighestDegree" - вычисление старшего коэффициента у полинома
	Пример: a getCoefAtHighestDegree to c
	
	"derivative" - вычисление производной полинома
	Пример: a derivative to c
	
	"gcdAndLcm" - вынесение из многочлена НОК знаменателей коэффициентов и НОД числителей
	Пример: a gcdAndLcm
	
	"rootsToSimple" - метод перевода кратных корней в простые
	Пример: a rootsToSimple to c
	
	"help"("?") - справка
	
	"exit"("quit" или "q") - выход из программы
